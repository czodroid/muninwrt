#! /usr/bin/env perl
#
# Filename: memory
# Author: Olivier Sirol <czo@free.fr>
# License: GPL-2.0 (http://www.gnu.org/copyleft)
# File Created: Dec 2014
# Last Modified: Saturday 06 July 2024, 15:34
# $Id: memory,v 1.8 2024/07/06 14:28:35 czo Exp $
# Edit Time: 11:04:33
# Description:
#
#           Munin plugin
#           monitor memory usage
#
# Copyright: (C) 2014-2024 Olivier Sirol <czo@free.fr>

# use strict;
use warnings;

##===================================================================##
## Main

$file = '/proc/meminfo';
open( FILE, "<$file" ) or die "ERROR: can't read $file: $!\n";
while (<FILE>) {
    chomp;
    if (/^(\w+):\s*(\d+)\s+kb/i) {
        $m{$1} = $2 * 1024;
    }
}
close FILE;

# use Data::Dumper;
# $Data::Dumper::Sortkeys = 1;
# print Dumper( \%m );
# exit 0;

$order = 'apps';
$order .= ' page_tables'  if defined $m{'PageTables'};
$order .= ' swap_cache'   if defined $m{'SwapCached'};
$order .= ' vmalloc_used' if defined $m{'VmallocUsed'};
$order .= ' slab'         if defined $m{'Slab'};
$order .= ' cached buffers free swap';

if ( $ARGV[0] and $ARGV[0] eq "config" ) {
    print <<EOT;
graph_args --base 1024 -l 0 --vertical-label Bytes --upper-limit $m{'MemTotal'}
graph_title Memory usage
graph_category system
graph_info This graph shows what the machine uses its memory for.
graph_order $order
apps.label apps
apps.draw AREA
apps.info Memory used by user-space applications.
buffers.label buffers
buffers.draw STACK
buffers.info Block device (e.g. harddisk) cache. Also where "dirty" blocks are stored until written.
swap.label swap
swap.draw STACK
swap.info Swap space used.
cached.label cache
cached.draw STACK
cached.info Parked file data (file content) cache.
free.label unused
free.draw STACK
free.info Wasted memory. Memory that is not used for anything at all.
EOT

    if ( defined $m{'Slab'} ) {
        print "slab.label slab_cache\n";
        print "slab.draw STACK\n";
        print "slab.info Memory used by the kernel (major users are caches like inode, dentry, etc).\n";
    }
    if ( defined $m{'SwapCached'} ) {
        print "swap_cache.label swap_cache\n";
        print "swap_cache.draw STACK\n";
        print "swap_cache.info A piece of memory that keeps track of pages that have been fetched from swap but not yet been modified.\n";
    }
    if ( defined $m{'PageTables'} ) {
        print "page_tables.label page_tables\n";
        print "page_tables.draw STACK\n";
        print "page_tables.info Memory used to map between virtual and physical memory addresses.\n";
    }
    if ( defined $m{'VmallocUsed'} ) {
        print "vmalloc_used.label vmalloc_used\n";
        print "vmalloc_used.draw STACK\n";
        print "vmalloc_used.info Virtual memory used by the kernel (used when the memory does not have to be physically contiguous).\n";
    }
    if ( defined $m{'Committed_AS'} ) {
        print "committed.label committed\n";
        print "committed.draw LINE2\n";
        print "committed.warn " . ( $m{'SwapTotal'} + $m{'MemTotal'} ) . "\n";
        print "committed.info The amount of memory that would be used if all the memory that's been allocated were to be used.\n";
    }
    if ( defined $m{'Mapped'} ) {
        print "mapped.label mapped\n";
        print "mapped.draw LINE2\n";
        print "mapped.info All mmap()ed pages.\n";
    }
    if ( defined $m{'Active'} ) {
        print "active.label active\n";
        print "active.draw LINE2\n";
        print "active.info Memory recently used. Not reclaimed unless absolutely necessary.\n";
    }
    if ( defined $m{'ActiveAnon'} ) {
        print "active_anon.label active_anon\n";
        print "active_anon.draw LINE1\n";
    }
    if ( defined $m{'ActiveCache'} ) {
        print "active_cache.label active_cache\n";
        print "active_cache.draw LINE1\n";
    }
    if ( defined $m{'Inactive'} ) {
        print "inactive.label inactive\n";
        print "inactive.draw LINE2\n";
        print "inactive.info Memory not currently used.\n";
    }
    if ( defined $m{'Inact_dirty'} ) {
        print "inact_dirty.label inactive_dirty\n";
        print "inact_dirty.draw LINE1\n";
        print "inact_dirty.info Memory not currently used, but in need of being written to disk.\n";
    }
    if ( defined $m{'Inact_laundry'} ) {
        print "inact_laundry.label inactive_laundry\n";
        print "inact_laundry.draw LINE1\n";
    }
    if ( defined $m{'Inact_clean'} ) {
        print "inact_clean.label inactive_clean\n";
        print "inact_clean.draw LINE1\n";
        print "inact_clean.info Memory not currently used.\n";
    }
    exit 0;
}

print "buffers.value $m{'Buffers'}\n";
print "swap.value " . ( $m{'SwapTotal'} - $m{'SwapFree'} ) . "\n";
print "cached.value $m{'Cached'}\n";
print "free.value $m{'MemFree'}\n";

$app = $m{'MemTotal'} - $m{'MemFree'} - $m{'Buffers'} - $m{'Cached'};

if ( defined $m{'Slab'} ) {
    print "slab.value $m{'Slab'}\n";
    $app -= $m{'Slab'};
}
if ( defined $m{'SwapCached'} ) {
    print "swap_cache.value $m{'SwapCached'}\n";
    $app -= $m{'SwapCached'};
}
if ( defined $m{'PageTables'} ) {
    print "page_tables.value $m{'PageTables'}\n";
    $app -= $m{'PageTables'};
}
if ( defined $m{'VmallocUsed'} ) {
    print "vmalloc_used.value $m{'VmallocUsed'}\n";
    $app -= $m{'VmallocUsed'};
}
if ( defined $m{'Committed_AS'} ) {
    print "committed.value $m{'Committed_AS'}\n";
}
if ( defined $m{'Mapped'} ) {
    print "mapped.value $m{'Mapped'}\n";
}
if ( defined $m{'Active'} ) {
    print "active.value $m{'Active'}\n";
}
if ( defined $m{'ActiveAnon'} ) {
    print "active_anon.value $m{'ActiveAnon'}\n";
}
if ( defined $m{'ActiveCache'} ) {
    print "active_cache.value $m{'ActiveCache'}\n";
}
if ( defined $m{'Inactive'} ) {
    print "inactive.value $m{'Inactive'}\n";
}
if ( defined $m{'Inact_dirty'} ) {
    print "inact_dirty.value $m{'Inact_dirty'}\n";
}
if ( defined $m{'Inact_laundry'} ) {
    print "inact_laundry.value $m{'Inact_laundry'}\n";
}
if ( defined $m{'Inact_clean'} ) {
    print "inact_clean.value $m{'Inact_clean'}\n";
}

print "apps.value $app\n";

__END__
